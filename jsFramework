#!/bin/bash
#Script de manejo del framework por consola.

#Este script va a manejar parametros de la siguiente manera
#Primer parametro: Tipo -- DAO, controller, cont_js; esto va a definir a que carpeta va y como va
#a ser en parte el nombre.
#Segundo parametro: Nombre -- segun como se llame el m√≥dulo

#       __       ___________                                                __     
#      |__| _____\_   _____/___________    _____   ______  _  _____________|  | __ 
#      |  |/  ___/|    __) \_  __ \__  \  /     \_/ __ \ \/ \/ /  _ \_  __ \  |/ / 
#      |  |\___ \ |     \   |  | \// __ \|  Y Y  \  ___/\     (  <_> )  | \/    <  
#  /\__|  /____  >\___  /   |__|  (____  /__|_|  /\___  >\/\_/ \____/|__|  |__|_ \ 
#  \______|    \/     \/               \/      \/     \/                        \/ 

#---------------------------------------------------------------------------
#Funciones 
#---------------------------------------------------------------------------

#valida que lleve el tipo y el nombre
if [ $1 == "DAO" ] && [ $2 ] ; then
	#statements
	echo "Creando DAO..."
	#crea en una variable el nombre del archivo
	NOMBRE_DAO="$2DAO.php"
	#crea el archivo con el comando touch y asigna permisos 777
	touch DAO/${NOMBRE_DAO} && chmod -R 777 DAO/${NOMBRE_DAO}
	#ingresa en la carpeta correspondiente
	cd DAO/

	#inserta contenido------------------------------------------------------
	echo "<?php" >> ${NOMBRE_DAO}
	echo "/**/" >> ${NOMBRE_DAO}
	echo "	include_once 'genericoDAO.php';" >> ${NOMBRE_DAO}	
	echo "		" >> ${NOMBRE_DAO}
	echo "	class $2DAO {" >> ${NOMBRE_DAO}
	echo "		" >> ${NOMBRE_DAO}
	echo "		use GenericoDAO;" >> ${NOMBRE_DAO}
	echo "		" >> ${NOMBRE_DAO}	
	echo "		public $""q_general;" >> ${NOMBRE_DAO}
	echo "		" >> ${NOMBRE_DAO}	
	echo "		" >> ${NOMBRE_DAO}
	echo "		//Funciones------------------------------------------" >> ${NOMBRE_DAO}
	echo "		//Espacio para las funciones en general de esta clase." >> ${NOMBRE_DAO}	
	echo "		" >> ${NOMBRE_DAO}
	echo "	}" >> ${NOMBRE_DAO}
	echo "?>" >> ${NOMBRE_DAO}
	#------------------------------------------------------------------------
	
	#muestra el contenido de la carpeta
	ls -l
	
	#notifica que el archivo ha sido creado // como validar que realmente se 
	#creo el archivo? -- que pasa si ya existe?
	#http://blog.desdelinux.net/comprobar-si-un-archivo-o-carpeta-existe-o-no-y-mas-con-ciclo-if/
	#echo "El archivo fue creado con exito."
	#Comprobacion de archivo
	if [ -f ${NOMBRE_DAO} ];
	then
	echo "El archivo DAO fue creado exitosamente."
	else
	echo "El archivo no se pudo crear."
	fi
	#-----------------------------------------------------------------------

elif [ $1 == "controller" ] && [ $2 ] && [ $3 ]; then
	
	echo "Creando controller..."

	#crea en una variable el nombre del archivo
	NOMBRE_CONTROLLER="$2Controller.php"
	#crea el archivo con el comando touch y asigna permisos 777
	touch controller/${NOMBRE_CONTROLLER} && chmod -R 777 controller/${NOMBRE_CONTROLLER}
	#ingresa en la carpeta correspondiente
	cd controller/

	#inserta contenido------------------------------------------------------
	echo "<?php" >> ${NOMBRE_CONTROLLER}
	echo "/**/" >> ${NOMBRE_CONTROLLER}
	echo "	include_once '../DAO/$2DAO.php';" >> ${NOMBRE_CONTROLLER} #nombre del DAO que debe existir previamente.	
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "	class $2Controller extends $2DAO{" >> ${NOMBRE_CONTROLLER} #extiende del DAO.
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		public $""NameCookieApp;" >> ${NOMBRE_CONTROLLER}
	echo "		public $""id_modulo;" >> ${NOMBRE_CONTROLLER}	
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		public function __construct() {" >> ${NOMBRE_CONTROLLER}
	echo "			" >> ${NOMBRE_CONTROLLER}
	echo "			include('../conexion/datos.php');" >> ${NOMBRE_CONTROLLER}
	echo "			" >> ${NOMBRE_CONTROLLER}
	echo "			$""this->id_modulo = $3; //id de la tabla modulos" >> ${NOMBRE_CONTROLLER}
	echo "			$""this->NameCookieApp = $""NomCookiesApp;" >> ${NOMBRE_CONTROLLER}	
	echo "			" >> ${NOMBRE_CONTROLLER}
	echo "		}" >> ${NOMBRE_CONTROLLER}
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		//Funciones-------------------------------------------" >> ${NOMBRE_CONTROLLER}
	echo "		//Espacio para las funciones de esta clase." >> ${NOMBRE_CONTROLLER}
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "		//permisos---------------------------------------------------------------------" >> ${NOMBRE_CONTROLLER}
	echo "		//$""arrPermisos = $""this->getPermisosModulo_Tipo($""this->id_modulo,$""_COOKIE[$""this->NameCookieApp.\"_IDtipo\"]);" >> ${NOMBRE_CONTROLLER}
	echo "		//$""edita = $""arrPermisos[0][\"editar\"];" >> ${NOMBRE_CONTROLLER}
	echo "		//$""elimina = $""arrPermisos[0][\"eliminar\"];" >> ${NOMBRE_CONTROLLER}
	echo "		//$""consulta = $""arrPermisos[0][\"consultar\"];" >> ${NOMBRE_CONTROLLER}
	echo "		//-----------------------------------------------------------------------------" >> ${NOMBRE_CONTROLLER}
	echo "		" >> ${NOMBRE_CONTROLLER}
	echo "	}" >> ${NOMBRE_CONTROLLER}
	echo "?>" >> ${NOMBRE_CONTROLLER}
	#------------------------------------------------------------------------
	
	#muestra el contenido de la carpeta
	ls -l
	
	#notifica que el archivo ha sido creado // como validar que realmente se 
	#creo el archivo? -- que pasa si ya existe?
	#http://blog.desdelinux.net/comprobar-si-un-archivo-o-carpeta-existe-o-no-y-mas-con-ciclo-if/
	#echo "El archivo fue creado con exito."
	#Comprobacion de archivo
	if [ -f ${NOMBRE_CONTROLLER} ];
	then
	echo "El archivo controller fue creado exitosamente."
	else
	echo "El archivo no se pudo crear."
	fi
	#-----------------------------------------------------------------------
elif [ $1 == "module" ] && [ $2 ] && [ $3 ]; then
	#statements
	#1 tipo,2 nombre, 3 id del modulo en la BD
	echo "Creando modulo..."

	#crea en una variable el nombre del archivo
	NOMBRE_MODULE="$2.php"
	#crea el archivo con el comando touch y asigna permisos 777
	touch vistas/${NOMBRE_MODULE} && chmod -R 777 vistas/${NOMBRE_MODULE}
	#ingresa en la carpeta correspondiente
	cd vistas/

	#inserta contenido------------------------------------------------------
	echo "<?php" >> ${NOMBRE_MODULE}
	echo "	" >> ${NOMBRE_MODULE}
	echo "	/**/" >> ${NOMBRE_MODULE}
	echo "	include('../controller/muestra_pagina.php');" >> ${NOMBRE_MODULE}
	echo "	" >> ${NOMBRE_MODULE}
	echo "	$""muestra_"$2" = new mostrar();" >> ${NOMBRE_MODULE}
	echo "	" >> ${NOMBRE_MODULE}
	echo "	//---------------------------------------------------------" >> ${NOMBRE_MODULE}
	echo "	$""pagina = 'cont_"$2".php';" >> ${NOMBRE_MODULE}
	echo "	$""scripts = array('cont_"$2".js');" >> ${NOMBRE_MODULE}
	echo "	$""id_modulo = "$3";" >> ${NOMBRE_MODULE}	
	echo "	//---------------------------------------------------------" >> ${NOMBRE_MODULE}
	echo "	" >> ${NOMBRE_MODULE}
	echo "	$""muestra_"$2"->mostrar_pagina_scripts($""pagina,$""scripts,$""id_modulo);" >> ${NOMBRE_MODULE}
	echo "?>" >> ${NOMBRE_MODULE}
	#------------------------------------------------------------------------

	#muestra el contenido de la carpeta
	ls -l
	
	#notifica que el archivo ha sido creado // como validar que realmente se 
	#creo el archivo? -- que pasa si ya existe?
	#http://blog.desdelinux.net/comprobar-si-un-archivo-o-carpeta-existe-o-no-y-mas-con-ciclo-if/
	#echo "El archivo fue creado con exito."
	#Comprobacion de archivo
	if [ -f ${NOMBRE_MODULE} ];
	then
	echo "El archivo module fue creado exitosamente."
	else
	echo "El archivo no se pudo crear."
	fi
	#-----------------------------------------------------------------------
elif [ $1 == "module_cont" ] && [ $2 ]; then
	#statements
	echo "Creando module_cont..."
	#1 tipo,2 nombre, 3 id del modulo en la BD
	#-----------------------------------------------------------------------
	#crea en una variable el nombre del archivo
	NOMBRE_CONTMODULE="cont_$2.php"
	#crea el archivo con el comando touch y asigna permisos 777
	touch vistas/${NOMBRE_CONTMODULE} && chmod -R 777 vistas/${NOMBRE_CONTMODULE}
	#ingresa en la carpeta correspondiente
	cd vistas/

	#inserta contenido------------------------------------------------------
	echo "<?php" >> ${NOMBRE_CONTMODULE}
	echo "	" >> ${NOMBRE_CONTMODULE}
	echo "	/**/" >> ${NOMBRE_CONTMODULE}	
	echo "	" >> ${NOMBRE_CONTMODULE}
	echo "	include('../controller/"$2"Controller.php');" >> ${NOMBRE_CONTMODULE}
	echo "	" >> ${NOMBRE_CONTMODULE}	
	echo "	include('../conexion/datos.php');" >> ${NOMBRE_CONTMODULE}	
	echo "	" >> ${NOMBRE_CONTMODULE}	
	echo "	$"$2"Inst = new "$2"Controller("");" >> ${NOMBRE_CONTMODULE}	
	echo "	" >> ${NOMBRE_CONTMODULE}	
	echo "	$""arrPermisos = $"$2"Inst->getPermisosModulo_Tipo($""id_modulo,$""_COOKIE[$""NomCookiesApp.""'_IDtipo'""]);" >> ${NOMBRE_CONTMODULE}	
	echo "	" >> ${NOMBRE_CONTMODULE}
	echo "	$""crea = $""arrPermisos[0]['crear'];" >> ${NOMBRE_CONTMODULE}	
	echo "	" >> ${NOMBRE_CONTMODULE}		
	echo "?>" >> ${NOMBRE_CONTMODULE}
	#------------------------------------------------------------------------

	#muestra el contenido de la carpeta
	ls -l
	
	#notifica que el archivo ha sido creado // como validar que realmente se 
	#creo el archivo? -- que pasa si ya existe?
	#http://blog.desdelinux.net/comprobar-si-un-archivo-o-carpeta-existe-o-no-y-mas-con-ciclo-if/
	#echo "El archivo fue creado con exito."
	#Comprobacion de archivo
	if [ -f ${NOMBRE_CONTMODULE} ];
	then
	echo "El archivo cont_module fue creado exitosamente."
	else
	echo "El archivo no se pudo crear."
	fi
	#-----------------------------------------------------------------------
elif [ $1 == "cont_js" ] && [ $2 ]; then

	echo "Creando cont_js..."

	#crea en una variable el nombre del archivo
	NOMBRE_CONT_JS="cont_$2.js"
	#crea el archivo con el comando touch y asigna permisos 777
	touch js/scripts_cont/${NOMBRE_CONT_JS} && chmod -R 777 js/scripts_cont/${NOMBRE_CONT_JS}
	#ingresa en la carpeta correspondiente
	cd js/scripts_cont/

	#inserta contenido------------------------------------------------------
	echo "$""(function(){" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}	
	echo "	 //https://github.com/jsmorales/jquery_controllerV2" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}
	echo "	 $""(\"#btn_nuevo_\").jquery_controllerV2({});" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}
	echo "	 $""(\"#btn_action_\").jquery_controllerV2({});" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}
	echo "	 $""(\"[name*='edita__']\").jquery_controllerV2({});" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}
	echo "	 $""(\"[name*='elimina__']\").jquery_controllerV2({});" >> ${NOMBRE_CONT_JS}
	echo "	 " >> ${NOMBRE_CONT_JS}
	echo "	//---------------------------------------------------------" >> ${NOMBRE_CONT_JS}	
	echo "});" >> ${NOMBRE_CONT_JS}

	#------------------------------------------------------------------------
	
	#muestra el contenido de la carpeta
	ls -l
	
	#notifica que el archivo ha sido creado // como validar que realmente se 
	#creo el archivo? -- que pasa si ya existe?
	#http://blog.desdelinux.net/comprobar-si-un-archivo-o-carpeta-existe-o-no-y-mas-con-ciclo-if/
	#echo "El archivo fue creado con exito."
	#Comprobacion de archivo
	if [ -f ${NOMBRE_CONT_JS} ];
	then
	echo "El archivo cont_js fue creado exitosamente."
	else
	echo "El archivo no se pudo crear."
	fi
	#-----------------------------------------------------------------------

else
	echo "No es posible crear el archivo, falta el TIPO o el NOMBRE o el ID del m√≥dulo."
fi